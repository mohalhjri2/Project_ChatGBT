# Define the Pet type
type Pet {
    id: ID!
    name: String!
    animalType: String!
    breed: String
    age: Int!
    household: Household
}

# Define the Household type
type Household {
    eircode: ID!
    numberOfOccupants: Int!
    maxNumberOfOccupants: Int!
    ownerOccupied: Boolean!
    pets: [Pet]
}

# Define the HouseholdStatistics type
type HouseholdStatistics {
    averageOccupants: Float!
    maxOccupants: Int!
    ownerOccupiedCount: Int!
}

# Define input types for mutations
input HouseholdInput {
    eircode: ID!
    numberOfOccupants: Int!
    maxNumberOfOccupants: Int!
    ownerOccupied: Boolean!
}

# Define the User type
type User {
    id: ID!
    username: String! # Email
    firstName: String!
    lastName: String!
    county: String
    role: String!
    locked: Boolean!
}

# Input type for creating a new user
input UserInput {
    username: String!
    password: String!
    firstName: String!
    lastName: String!
    county: String
    role: String!
    locked: Boolean
}

# Consolidated Queries
type Query {
    # Household Queries
    allHouseholds: [Household!]!
    householdByEircode(eircode: ID!): Household
    householdStatistics: HouseholdStatistics!

    # Pet Queries
    petsByAnimalType(animalType: String!): [Pet!]!
    petById(id: ID!): Pet

    # User Queries
    allUsers: [User!]!
    userByUsername(username: String!): User
}

# Consolidated Mutations
type Mutation {
    # Household Mutations
    createHousehold(household: HouseholdInput!): Household!
    deleteHousehold(eircode: ID!): String!

    # Pet Mutations
    deletePet(id: ID!): String!

    # User Mutations
    createUser(user: UserInput!): User!
    deleteUser(username: String!): String!
    updateUserRole(username: String!, role: String!): User!
}
